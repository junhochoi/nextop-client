buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath group: 'com.android.tools.build', name: 'gradle', version: '1.1.3'
//        classpath 'org.robolectric:robolectric-gradle-plugin:0.14.+'
    }
}

apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'signing'
//apply plugin: 'robolectric'

sourceCompatibility = JavaVersion.VERSION_1_6
targetCompatibility = JavaVersion.VERSION_1_6

repositories {
    mavenCentral()
    flatDir {
        dirs 'm2repository'
    }
}

android {
    compileSdkVersion 22
    buildToolsVersion '22.0.0'

    defaultConfig {
        minSdkVersion 10
        targetSdkVersion 22
        versionCode androidVersionCode()
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}


dependencies {
    compile(project(':java-common')) {
        // use the version included in Android
        exclude module: 'commons-logging'
        exclude module: 'commons-collections'
    }
    // TODO the new tools don't like "provided" with aars?
    // TODO for now, bundle volley with Nextop
    // TODO(provided) since there is no standard volley distribution (?),
    // TODO(provided) expect users to have their own package of volley
    compile project(':volley')

    // FIXME why is this not included as a transitive dependency of :java-common?
    // FIXME see http://forums.gradle.org/gradle/topics/including-a-java-project-into-an-android-library-project-does-not-include-transitive-file-dependencies?rfm=1
    compile fileTree(dir: new File(project(':java-common').projectDir, 'libs'), include: ['*.jar'])

    compile fileTree(dir: 'libs', include: ['*.jar'])


    compile 'io.reactivex:rxandroid:0.24.0'

//    compile fileTree(dir: 'libs', include: ['*.jar'])


    androidTestCompile 'junit:junit:3.8.2'
    /* (source of warnings) this has a transitive dependency on
    org.apache.httpcomponents:httpclient:4.0.3
    commons-logging:commons-logging:1.1.1 */
//    androidTestCompile 'org.robolectric:robolectric:2.3'
}


// @see http://stackoverflow.com/questions/17033878/generate-javadocs-with-android-gradle-plugin
// @see http://stackoverflow.com/questions/19307341/android-library-gradle-release-jar

android.libraryVariants.all { variant ->
    task("archive${variant.name.capitalize()}Jar", type: Jar) {
        description "Jar for $variant.name."
        from variant.javaCompile
    }

    task("archive${variant.name.capitalize()}Sources", type: Jar) {
        description "Generates sources for $variant.name."
        classifier = 'sources'
        from variant.javaCompile.source
    }

    task("generate${variant.name.capitalize()}Javadoc", type: Javadoc) {
        description "Generates Javadoc for $variant.name."
        source = variant.javaCompile.source
        ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
        classpath = files(variant.javaCompile.classpath.files) + files(ext.androidJar)
        options.links("http://docs.oracle.com/javase/7/docs/api/");
        options.links("http://d.android.com/reference/");
        exclude '**/BuildConfig.java'
        exclude '**/R.java'
    }

    task("archive${variant.name.capitalize()}Javadoc", type: Jar, dependsOn: "generate${variant.name.capitalize()}Javadoc") {
        classifier = 'javadoc'
        from tasks["generate${variant.name.capitalize()}Javadoc"].destinationDir
    }

    artifacts {
        archives tasks["archive${variant.name.capitalize()}Jar"]
        archives tasks["archive${variant.name.capitalize()}Sources"]
        archives tasks["archive${variant.name.capitalize()}Javadoc"]
    }
}


// properties defined in $HOME/gradle.properties
// @see http://central.sonatype.org/pages/gradle.html

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment {
                MavenDeployment deployment -> signing.signPom(deployment)
            }

            repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2') {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }
            snapshotRepository(url: 'https://oss.sonatype.org/content/repositories/snapshots') {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                groupId project.group
                artifactId project.name
                name 'Nextop for Android'
                description 'Nextop client for Android 10+'
                url 'http://nextop.io/android'
                scm {
                    url 'https://github.com/nextopio/nextop-client/tree/master/android'
                }
                developers {
                    developer {
                        name 'nextop.io'
                        email 'support@nextop.io'
                        organizationUrl 'http://nextop.io'
                    }
                }

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }
            }
        }
    }
}
